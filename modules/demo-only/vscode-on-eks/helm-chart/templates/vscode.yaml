# apiVersion: networking.k8s.io/v1
# kind: IngressClass
# metadata:
#   name: alb
# spec:
#   controller: ingress.k8s.aws/alb
# ---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: {{ .Values.namespace }}
  name: code-server-alb
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  rules:
    - http:
        paths:
        - path: /code-server
          pathType: Prefix
          backend:
            service:
              name: nginx-proxy
              port:
                number: 80
---
apiVersion: v1
kind: Service
metadata:
 name: nginx-proxy
 namespace: {{ .Values.namespace }}
spec:
 type:  {{ .Values.proxy.service.type }}
 ports:
  - protocol: "TCP"
    port: 80
    targetPort: 80
 selector:
    app: nginx-proxy
    tier: frontend
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: {{ .Values.namespace }}
data:
  nginx.conf: |
    user nginx;
    worker_processes  1;
    events {
      worker_connections  10240;
    }
    http {
      upstream Backend {
          server code-server-service;
      }

      server {
          listen 80;
          listen [::]:80;
          root /usr/share/nginx/html;
          rewrite ^/$ http://$host/code-server redirect;

          location /code-server/ {
              proxy_pass http://Backend/;
              proxy_set_header Host $host;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection upgrade;
              proxy_set_header Accept-Encoding gzip;
          }
      }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx-proxy
    tier: frontend
  name: nginx-proxy
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: nginx-proxy
      tier: frontend
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx-proxy
        tier: frontend
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
        volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-conf
          items:
            - key: nginx.conf
              path: nginx.conf
---
apiVersion: v1
kind: Service
metadata:
 name: code-server-service
 namespace: {{ .Values.namespace }}
spec:
 type: NodePort
 ports:
 - port: 80
   targetPort: 8080
   protocol: TCP
 selector:
    app: code-server
    tier: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: code-server
    tier: backend
  name: code-server
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: code-server
      tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: code-server
        tier: backend
    spec:
      containers:
      - image: codercom/code-server:latest
        imagePullPolicy: Always
        name: code-server
        env:
        - name: PASSWORD
          value: {{ .Values.vscode.password }}
        args:
          # - --auth 
          # - none
          # - --bind-addr
          # - 0.0.0.0:80
      serviceAccountName: {{ .Values.serviceAccountName }}